{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Dexpresso API v1",
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.dexpresso.exchange/api/v1"
    }
  ],
  "paths": {
    "/markets/info": {
      "get": {
        "summary": "Markets Info",
        "description": "This endpoint provides information regarding __one__, __many__, or __all__ markets available in a __single__ network.",
        "operationId": "MarketsInfo",
        "tags": ["Markets"],
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "description": "User's selected network name",
            "required": true,
            "example": ["ethereum", " zksyncv1_goerli", " polygon"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "markets",
            "in": "query",
            "description": "Comma-seperated list of markets",
            "required": false,
            "example": ["ETH-DAI,ETH-USDC"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A json response containing information of requested markets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/markets_info"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/markets/config": {
      "get": {
        "summary": "Markets Config",
        "description": "This endpoint provides information regarding __one__, __many__, or __all__ markets available in a __single__ network.",
        "operationId": "MarketsConfig",
        "tags": ["Markets"],
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "description": "User's selected network name",
            "required": true,
            "example": ["zksyncv1", "ethereum", "zksyncv1_goerli", "fantom", "polygon"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "markets",
            "in": "query",
            "description": "Comma-seperated list of markets",
            "required": false,
            "example": ["ETH-DAI,ETH-USDC"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A json response containing information of requested markets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/markets_config"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/markets/stats": {
      "get": {
        "summary": "Markets Stat",
        "description": "This endpoint provides information regarding __one__, __many__, or __all__ markets available in a __single__ network.",
        "operationId": "MarketsStat",
        "tags": ["Markets"],
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "description": "User's selected network name",
            "required": true,
            "example": ["zksyncv1", "ethereum", "zksyncv1_goerli", "fantom", "polygon"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "markets",
            "in": "query",
            "description": "Comma-seperated list of markets",
            "required": false,
            "example": ["ETH-DAI,ETH-USDC"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A json response containing information of requested markets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/markets_stat"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "Order Book",
        "description": "This endpoint provides information regarding __one__, __many__, or __all__ markets available in a __single__ network.",
        "operationId": "OrderBook",
        "tags": ["Orders"],
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "description": "User's selected network name",
            "required": true,
            "example": ["zksyncv1", "ethereum", "zksyncv1_goerli", "fantom", "polygon"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "market",
            "in": "query",
            "description": "Market's symbol",
            "required": true,
            "example": ["ETH-DAI","ETH-USDC"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "side",
            "in": "query",
            "description": "Side of the orders",
            "required": false,
            "example": ["b","s"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "pagination parameter of the API",
            "required": false,
            "example": [1, 3],
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "number of orders per each page",
            "required": false,
            "example": [10, 20],
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A json response containing information of requested markets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/orderbook"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/orders": {
      "get": {
        "summary": "User Order History",
        "description": "Represents history of user orders. One can specifiy multiple parameters, such as __network__ and __market__ to get a filtered list of user orders.",
        "operationId": "OrderBook",
        "tags": ["Orders"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Given token to user after successful login to the Dexpresso",
            "required": true,
            "example": ["Bearer **access_token**"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "network",
            "in": "query",
            "description": "User's selected network name",
            "required": true,
            "example": ["zksyncv1", "ethereum", "zksyncv1_goerli", "fantom", "polygon"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "market",
            "in": "query",
            "description": "Market's symbol",
            "required": true,
            "example": ["ETH-DAI","ETH-USDC"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "Start of the orders query period",
            "required": false,
            "example": ["2022-07-26T16:49:30.560Z","2022-07-27T16:49:30.560Z"],
            "schema": {
              "type": "Datetime",
              "format": "Datetime"
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "End of the orders query period",
            "required": false,
            "example": ["2022-07-26T16:49:30.560Z","2022-07-27T16:49:30.560Z"],
            "schema": {
              "type": "Datetime",
              "format": "Datetime"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "pagination parameter of the API",
            "required": false,
            "example": [1, 3],
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "number of orders per each page",
            "required": false,
            "example": [10, 20],
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A json response containing information of requested markets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_orders"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Cancel All Orders",
        "description": "Cancels all user orders.",
        "operationId": "OrderBook",
        "tags": ["Orders"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Given token to user after successful login to the Dexpresso",
            "required": true,
            "example": ["Bearer **access_token**"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "network",
            "in": "query",
            "description": "User's selected network name",
            "required": false,
            "example": ["zksyncv1", "ethereum", "zksyncv1_goerli", "fantom", "polygon"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "market",
            "in": "query",
            "description": "Market's symbol",
            "required": false,
            "example": ["ETH-DAI","ETH-USDC"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "side",
            "in": "query",
            "description": "Side of the orders: 'b' for buy and 's' for sell.",
            "required": false,
            "example": ["b", "s"],
            "schema": {
              "type": "Char",
              "format": "Char"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A json response containing information of requested markets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_orders"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/order": {
      "get": {
        "summary": "Single User Order",
        "description": "Returns a single order of the user (specified by __order_id__).",
        "operationId": "OrderBook",
        "tags": ["Orders"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Given token to user after successful login to the Dexpresso",
            "required": true,
            "example": ["Bearer **access_token**"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of the user's order",
            "required": true,
            "example": ["12", "834"],
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A json response containing information of requested markets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "json",
                  "properties": {
                    "success": { "type": "boolean" },
                    "network": { "type": "string" },
                    "ids": { "format": "List[integer]" }
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Cancel Single Order",
        "description": "Returns a single order of the user (specified by __order_id__).",
        "operationId": "OrderBook",
        "tags": ["Orders"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Given token to user after successful login to the Dexpresso",
            "required": true,
            "example": ["Bearer **access_token**"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of the user's order",
            "required": true,
            "example": ["12", "834"],
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A json response containing information of requested markets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "json",
                  "required": ["orders"],
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Submit Order",
        "description": "Returns a single order of the user (specified by __order_id__).",
        "operationId": "OrderBook",
        "tags": ["Orders"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Given token to user after successful login to the Dexpresso",
            "required": true,
            "example": ["Bearer **access_token**"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                 "properties": {
                    "tx": {
                      "type": "Json Object",
                      "properties": {
                        "accountId": { 
                          "description": "Account Id representor of the account in the blockchain.",
                          "type": "integer"
                        },
                        "recipient": { 
                          "description": "Account address in the blockchain.",
                          "type": "string",
                          "example" : ["0x14be4Dc6E2e7562eB80F20fA4f8dbD072B8a5667"]
                        },
                        "nonce": {
                          "description": "Account nonce in the blockchain.",
                          "type": "integer",
                          "example" : ["31"]
                        },
                        "amount": {
                          "description": "Size of the order in terms of base-asset.",
                          "type": "float",
                          "example" : ["0.82"]
                        },
                        "tokenSell": {
                          "description": "Address of the selling token.",
                          "type": "string",
                          "example" : ["0x14be4Dc6E2e7562eB80F20fA4f8dbD072B8a5667"]
                        },
                        "tokenBuy": {
                          "description": "Address of the receiving token.",
                          "type": "string",
                          "example" : ["0x14be4Dc6E2e7562eB80F20fA4f8dbD072B8a5667"]
                        },
                        "validUntil": {
                          "description": "The order will be valid until blockchain's block number reaches this number.",
                          "type": "integer",
                          "example" : ["1238843488"]
                        },
                        "ratio": {
                          "description": "The order will be valid until blockchain's block number reaches this number.",
                          "type": "tuple",
                          "example" : ["[\"1000000000000000000\", \"990000000\"]"]
                        },
                        "signature": {
                          "properties": {
                            "pubKey": {"type": "Public Key Hex String", "example": "95d4f626c9545758603d6e19d135803b19d0df61edf923a206f216e097b40faf"},
                            "signature": {"type": "Signature Hex String", "example": "0x1bf137178568d44b93258e60f0656cba3064f614e0e3664afa2365ebf09405fe1f54eacf584e2e197c42fcd11656620f9827b85d7675f0e34c02a8ff0cd7b0621c"}
                          }
                        },
                        "ethSignature": {
                          "properties": {
                            "type": {"type": "EthereumSignature", "example": "EthereumSignature"},
                            "signature": {"type": "Signature Hex String", "example": "0x1bf137178568d44b93258e60f0656cba3064f614e0e3664afa2365ebf09405fe1f54eacf584e2e197c42fcd11656620f9827b85d7675f0e34c02a8ff0cd7b0621c"}
                          }
                        }
                      }
                    },
                    "market": {
                      "description": "Market's symbol",
                      "example": ["ETH-DAI","ETH-USDC"],
                      "type": "string"
                    },
                    "amount": {
                      "description": "Size of the order in terms of base-asset in UNITs.",
                      "example": ["1000000000"],
                      "type": "integer"
                    },
                    "price": {
                      "description": "The exact price on which user wants to place order.",
                      "example": ["10000.00000"],
                      "type": "float"
                    },
                    "type": {
                      "description": "The type of the order ('m' for Market and 'l' for Limit).",
                      "example": ["l", "m"],
                      "type": "Char"
                    }
                 },
              "required": ["type", "price", "amount", "market", "tx"] 
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A json response containing information of the submitted order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_order"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Connect to Dexpresso",
        "description": "The endpoint provides clients with a JWT in order to enable easy authentication during a temporary session.",
        "operationId": "Login",
        "tags": ["Authentication"],
        "parameters": [
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                 "properties": {
                    "network": {
                      "description": "The blockchain network that client wants to login in.",
                      "example": ["ethereum"," zksyncv1_goerli"],
                      "type": "string"
                    },
                    "address": {
                      "description": "User's wallet address in the blockchain",
                      "example": ["0x14be4Dc6E2e7562eB80F20fA4f8dbD072B8a5667"],
                      "type": "string"
                    },
                    "signature": {
                      "description": "The hex string of the signature resulted by signing the message 'Login to Dexpresso' with the private key of the user's address.",
                      "example": ["0x8a1ac5f656fc6945bab83b36d7f50e7578be2883154f4787a91bcd66eda58d575176bbaeb98bbcd109ff3a1529c11235260f0c92116a188c67314ca6ec3b25cd1b"],
                      "type": "Hex String"
                    },
                    "user_data": {
                      "description": "The successful response will additionally contain a list of latest user orders and fills if this is set to __true__.",
                      "type": "boolean"
                    },
                    "uuid": {
                      "description": "The uuid related to the websocket subscribing user to the Dexpresso's orderbook. If this is provided, user fills and user ",
                      "example": ["42f26774-e624-4fbb-97be-00f14f505268"],
                      "type": "string"
                    }
                 },
              "required": ["network", "address", "signature"] 
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A json response containing information of the submitted order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "json",
                  "required": ["success", "user_id", "access_token"],
                  "properties": {
                    "success": {"format": "boolean"},
                    "user_id": {"format": "string"},
                    "access_token": {"format": "string: jwt.access.token"},
                    "user_orders": { "format": "List [Orders]" },
                    "user_fills": { "format": "List [Fills/Trades]" }

                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/fills": {
      "get": {
        "summary": "Latest Trades",
        "description": "Provides latest trades in the chosen __network__ and __market__.",
        "operationId": "MarketFills",
        "tags": ["Trades"],
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "description": "User's selected network name",
            "required": true,
            "example": ["zksyncv1", "ethereum", "zksyncv1_goerli", "fantom", "polygon"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "market",
            "in": "query",
            "description": "Market's symbol",
            "required": true,
            "example": ["ETH-DAI","ETH-USDC"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "pagination parameter of the API",
            "required": false,
            "example": [1, 3],
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "number of orders per each page",
            "required": false,
            "example": [10, 20],
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A json response containing information of requested markets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fills"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/fills": {
      "get": {
        "summary": "User Trade History",
        "description": "Provides trade history of the user in the chosen __network__ and __market__.",
        "operationId": "UserFills",
        "tags": ["Trades"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Given token to user after successful login to the Dexpresso",
            "required": true,
            "example": ["Bearer **access_token**"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "network",
            "in": "query",
            "description": "User's selected network name",
            "required": false,
            "example": ["zksyncv1", "ethereum", "zksyncv1_goerli", "fantom", "polygon"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "market",
            "in": "query",
            "description": "Market's symbol",
            "required": false,
            "example": ["ETH-DAI","ETH-USDC"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "pagination parameter of the API",
            "required": false,
            "example": [1, 3],
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "number of orders per each page",
            "required": false,
            "example": [10, 20],
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A json response containing information of requested markets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fills"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/markets/subscription": {
      "post": {
        "summary": "Subscribe to Market",
        "description": "The endpoint provides clients with a JWT in order to enable easy authentication during a temporary session.",
        "operationId": "Login",
        "tags": ["Websocket"],
        "parameters": [
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                 "properties": {
                    "network": {
                      "description": "The blockchain network that client wants to login in.",
                      "example": ["ethereum"," zksyncv1_goerli"],
                      "type": "string"
                    },
                    "market": {
                      "description": "Target market to which the client wants to subscribe.",
                      "example": ["ETH-DAI"],
                      "type": "string"
                    },
                    "uuid": {
                      "description": "The uuid related to the websocket subscribing user to the Dexpresso's orderbook. If this is provided, user fills and user ",
                      "example": ["42f26774-e624-4fbb-97be-00f14f505268"],
                      "type": "string"
                    },
                    "clear": {
                      "description": "unsubscribe from all previous WS connections before starting this WS.",
                      "type": "boolean"
                    }
                 },
              "required": ["network", "market", "uuid"] 
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A json response containing information of the submitted order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "json",
                  "required": ["success"],
                  "properties": {
                    "success": {"format": "boolean"}
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Unsubscribe from Market",
        "description": "The endpoint provides clients with a JWT in order to enable easy authentication during a temporary session.",
        "operationId": "Login",
        "tags": ["Websocket"],
        "parameters": [
          {
            "name": "network",
            "in": "query",
            "description": "User's selected network name",
            "required": true,
            "example": ["zksyncv1", "ethereum", "zksyncv1_goerli", "fantom", "polygon"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "market",
            "in": "query",
            "description": "Market's symbol",
            "required": true,
            "example": ["ETH-DAI","ETH-USDC"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "The uuid related to the websocket subscribing user to the Dexpresso's orderbook. If this is provided, user fills and user ",
            "required": true,
            "example": ["42f26774-e624-4fbb-97be-00f14f505268"],
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A json response containing information of the submitted order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "json",
                  "required": ["success"],
                  "properties": {
                    "success": {"format": "boolean"}
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Pet": {
        "type": "object",
        "required": ["id", "name"],
        "properties": {
          "id": {"format": "int64"},
          "name": {"type": "string"},
          "tag": {"type": "string"}
        }
      },
      "markets_info": {
        "type": "json",
        "required": ["info"],
        "properties": {
          "info": {
            "type": "list",
            "format": "list",
            "properties": {
              "network": {"format": "string"},
              "base_asset_name": {"format": "string"},
              "quote_asset_name": {"format": "string"},
              "display_name": {"format": "string"},
              "price_precision": {"format": "int32"},
              "base_asset": {
                "type": "json",
                "format": "json",
                "properties": {
                  "address": {"format": "string"},
                  "symbol": {"format": "string"},
                  "decimals": {"format": "int32"}
                }
              },
              "quote_asset": {
                "type": "json",
                "format": "json",
                "properties": {
                  "address": {"format": "string"},
                  "symbol": {"format": "string"},
                  "decimals": {"format": "int32"}
                }
              }
            }
          }
        }
      },
      "markets_config": {
        "type": "json",
        "required": ["config"],
        "properties": {
          "config": {
            "type": "list",
            "format": "list",
            "properties": {
              "network": {"format": "string"},
              "limit_enabled": {"format": "boolean"},
              "market": {"format": "string"},
              "maker_fee": {"format": "format"},
              "taker_fee": {"format": "format"},
              "min_order_size": {"format": "format"}
            }
          }
        }
      },
      "markets_stat": {
        "type": "json",
        "required": ["stat"],
        "properties": {
          "stat": {
            "type": "list",
            "format": "list",
            "properties": {
              "network": {"format": "string"},
              "last_price": {"format": "float"},
              "change": {"format": "float"},
              "high_price": {"format": "float"},
              "low_price": {"format": "float"},
              "base_volume": {"format": "float"},
              "quote_volume": {"format": "float"},
              "market": {"format": "string"}
            }
          }
        }
      },
      "user_order": {
        "type": "json",
        "required": ["orders"],
        "properties": {
          "network": {"format": "string"},
          "price": {"format": "float"},
          "id": {"format": "int32"},
          "order_id": {"format": "int32"},
          "user_id": {"format": "int32"},
          "base_quantity": {"format": "float"},
          "quote_quantity": {"format": "float"},
          "unfilled": {"format": "float"},
          "unbroadcasted": {"format": "float"},
          "maker_fee": {"format": "float"},
          "taker_fee": {"format": "float"},
          "created_at": {"format": "Datetime"},
          "expiration": {"format": "int32"},
          "type": {"type": "string"},
          "status": {"format": "string"}
        }
      },
      "user_orders": {
        "type": "json",
        "required": ["orders"],
        "properties": {
          "orders": {
            "type": "list",
            "format": "list",
            "properties": {
              "schema": {
                "$ref": "#/components/schemas/user_order"
              }
            }
          }
        }
      },
      "orderbook": {
        "type": "json",
        "required": ["orderbook"],
        "properties": {
          "orders": {
            "type": "list",
            "format": "list",
            "properties": {
              "price": {"format": "float"},
              "amount": {"format": "float"},
              "total": {"format": "float"},
              "side": {"format": "Char: 'b', 's'"}
            }
          }
        }
      },
      "fills": {
        "type": "json",
        "required": ["fills"],
        "properties": {
          "fills": {
            "type": "list",
            "format": "list",
            "properties": {
              "schema": {
                "type": "json",
                "properties": {
                  "id": {"format": "int32"},
                  "network": {"format": "string"},
                  "price": {"format": "float"},
                  "maker_user_id": {"format": "string"},
                  "taker_user_id": {"format": "string"},
                  "tx_hash": {"format": "string"},
                  "amount": {"format": "float"},
                  "maker_fee": {"format": "float"},
                  "taker_fee": {"format": "float"},
                  "created_at": {"format": "Datetime"},
                  "maker_order_id": {"format": "int32"},
                  "taker_order_id": {"format": "int32"},
                  "type": {"type": "string"},
                  "status": {"format": "string"}
                }
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["code", "message"],
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
